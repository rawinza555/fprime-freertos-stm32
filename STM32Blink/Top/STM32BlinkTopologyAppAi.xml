<?xml version="1.0" encoding="UTF-8"?>
<assembly name = "STM32Blink">

    <!-- Import component declarations -->

    <import_component_type>Svc/FatalHandler/FatalHandlerComponentAi.xml</import_component_type>
    <import_component_type>Svc/ActiveRateGroup/ActiveRateGroupComponentAi.xml</import_component_type>
    <import_component_type>Svc/TlmChan/TlmChanComponentAi.xml</import_component_type>

    <import_component_type>Svc/CmdDispatcher/CommandDispatcherComponentAi.xml</import_component_type>
    <import_component_type>Svc/PrmDb/PrmDbComponentAi.xml</import_component_type>

    <import_component_type>Svc/AssertFatalAdapter/AssertFatalAdapterComponentAi.xml</import_component_type>
    <import_component_type>Svc/Health/HealthComponentAi.xml</import_component_type>
    <import_component_type>Svc/ActiveLogger/ActiveLoggerComponentAi.xml</import_component_type>
    <import_component_type>Svc/Time/TimeComponentAi.xml</import_component_type>
    <import_component_type>Svc/RateGroupDriver/RateGroupDriverComponentAi.xml</import_component_type>
    <import_component_type>Drv/BlockDriver/BlockDriverComponentAi.xml</import_component_type>

    <import_component_type>Svc/RTOSTime/RTOSTimeComponentAi.xml</import_component_type>
    <import_component_type>Drv/STM32GpioDriver/STM32GpioDriverComponentAi.xml</import_component_type>
    <import_component_type>Drv/STM32SerialDriver/STM32SerialDriverComponentAi.xml</import_component_type>
    <import_component_type>STM32Blink/LedBlinker/LedBlinkerComponentAi.xml</import_component_type>
    <import_component_type>Svc/GroundInterface/GroundInterfaceComponentAi.xml</import_component_type>

    <!-- Declare component instances - must match names in Components.hpp -->

    <!-- Core C&DH Components -->
    <instance namespace="Svc" name="cmdDisp" type="CommandDispatcher" base_id="121"  base_id_window="20" />
    <instance namespace="Svc" name="chanTlm" type="TlmChan" base_id="61"  base_id_window="20" />
    <instance namespace="Svc" name="prmDb" type="PrmDb" base_id="141"  base_id_window="20" />
    <instance namespace="Svc" name="eventLogger" type="ActiveLogger" base_id="421"  base_id_window="20" />
    <instance namespace="Svc" name="health" type="Health" base_id="361"  base_id_window="20" />

    <instance namespace="Svc" name="fatalAdapter" type="AssertFatalAdapter" base_id="341"  base_id_window="20" />
    <instance namespace="Svc" name="fatalHandler" type="FatalHandler" base_id="1"  base_id_window="20" />
    <instance namespace="Svc" name="RTOSTime" type="RTOSTime" base_id="441"  base_id_window="20" />

    <instance namespace="Drv" name="serial" type="STM32SerialDriver" base_id="801"  base_id_window="20" />
    <instance namespace="Drv" name="ledDrv" type="STM32GpioDriver" base_id="661"  base_id_window="20" />
    <instance namespace="STM32Blink" name="blinker" type="LedBlinker" base_id="721"  base_id_window="20" />
    <instance namespace="Svc" name="ground" type="GroundInterface" base_id="761"  base_id_window="20" />


    <!-- Communications driver. May be swapped with other comm drivers like UART -->   

    <!-- Rate Group Components -->

    <instance namespace="Svc" name="rateGroupDriverComp" type="RateGroupDriver" base_id="461"  base_id_window="20" />
    <instance namespace="Svc" name="rateGroup1Comp" type="ActiveRateGroup" base_id="21"  base_id_window="20" />
    <instance namespace="Svc" name="rateGroup2Comp" type="ActiveRateGroup" base_id="161"  base_id_window="20" />
    <instance namespace="Svc" name="rateGroup3Comp" type="ActiveRateGroup" base_id="241"  base_id_window="20" />

    <!-- Reference Example Components -->
    
    <instance namespace="Drv" name="blockDrv" type="BlockDriver" base_id="481"  base_id_window="20" />

    <!-- Connections -->
    <!-- Communications driver connections -->
    <connection name = "groundInterWrite">
       <source component = "ground" port = "write" type = "BufferSend" num = "0"/>
        <target component = "serial" port = "write" type = "BufferSend" num = "0"/>
   </connection>

   <connection name = "groundInterRead">
       <source component = "ground" port = "readPoll" type = "BufferSend" num = "0"/>
        <target component = "serial" port = "readPoll" type = "BufferSend" num = "0"/>
   </connection>

    <!-- Uplink data connections -->

    <connection name = "UplinkCommands">
        <source component = "groundInterface" port = "uplinkPort" type = "Com" num = "0"/>
        <target component = "cmdDisp" port = "seqCmdBuff" type = "Com" num = "0"/>
    </connection>

    <!-- Downlink ports -->


    <!-- Downlink data connections -->
    <connection name = "eventLoggerPkts">
        <source component = "eventLogger" port = "PktSend" type = "Com" num = "0"/>
        <target component = "ground" port = "downlinkPort" type = "Com" num = "0"/>
    </connection>
    <connection name = "chanTlmPkts">
        <source component = "chanTlm" port = "PktSend" type = "Com" num = "0"/>
        <target component = "ground" port = "downlinkPort" type = "Com" num = "0"/>
    </connection>


    
    <!-- Command Registration/Dispatch/Reply Connections -->
   
    <!-- Command Registration Ports - Registration port number must match dispatch port for each component -->

    <connection name = "EventLoggerReg">
         <source component = "eventLogger" port = "CmdReg" type = "CmdReg" num = "0"/>
         <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "0"/>
    </connection>
    <connection name = "CmdDispReg">
         <source component = "cmdDisp" port = "CmdReg" type = "CmdReg" num = "0"/>
         <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "1"/>
    </connection>
    <connection name = "HealthReg">
         <source component = "health" port = "CmdReg" type = "CmdReg" num = "0"/>
         <target component = "cmdDisp" port = "compCmdReg" type = "CmdReg" num = "2"/>
    </connection>




    <!-- Command Dispatch Ports - Dispatch port number must match registration port for each component -->

    <connection name = "EventLoggerDisp">
         <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "0"/>
         <target component = "eventLogger" port = "CmdDisp" type = "Cmd" num = "0"/>
    </connection>
    <connection name = "CmdDispDisp">
         <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "1"/>
         <target component = "cmdDisp" port = "CmdDisp" type = "Cmd" num = "0"/>
    </connection>
    <connection name = "HealthDisp">
         <source component = "cmdDisp" port = "compCmdSend" type = "Cmd" num = "2"/>
         <target component = "health" port = "CmdDisp" type = "Cmd" num = "0"/>
    </connection>
    
   
    <!-- Command Reply Ports - Go to the same response port on the dispatcher -->

    <connection name = "EventLoggerReply">
        <source component = "eventLogger" port = "CmdStatus" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
    </connection>
    <connection name = "CmdDispReply">
        <source component = "cmdDisp" port = "CmdStatus" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
    </connection>
    <connection name = "HealthReply">
        <source component = "health" port = "CmdStatus" type = "CmdResponse" num = "0"/>
        <target component = "cmdDisp" port = "compCmdStat" type = "CmdResponse" num = "0"/>
    </connection>
    
    <!-- Sequencer Connections - should not conflict with uplink port -->


    <!-- Input port number needs to be the same as previous dispatch -->

   
    <!-- Event Logger Binary Connections -->
        <connection name = "EventLoggerLog">
        <source component = "eventLogger" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "CmdDispLog">
        <source component = "cmdDisp" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "FatalAdapterLog">
        <source component = "fatalAdapter" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "HealthLog">
        <source component = "health" port = "Log" type = "Log" num = "0"/>
        <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "RG1Ev">
         <source component = "rateGroup1Comp" port = "Log" type = "Log" num = "0"/>
         <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "RG2Ev">
         <source component = "rateGroup2Comp" port = "Log" type = "Log" num = "0"/>
         <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>
    <connection name = "RG3Ev">
         <source component = "rateGroup3Comp" port = "Log" type = "Log" num = "0"/>
         <target component = "eventLogger" port = "LogRecv" type = "Log" num = "0"/>
    </connection>

    <!-- Event Logger Text Connections -->
   
  
    <!-- Telemetry Connections -->


    <connection name = "cmdDispTlm">
        <source component = "cmdDisp" port = "Tlm" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
    </connection>
    <connection name = "Rg1Tlm">
         <source component = "rateGroup1Comp" port = "Tlm" type = "Tlm" num = "0"/>
         <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
    </connection>
    <connection name = "Rg2Tlm">
         <source component = "rateGroup2Comp" port = "Tlm" type = "Tlm" num = "0"/>
         <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
    </connection>
    <connection name = "Rg3Tlm">
         <source component = "rateGroup3Comp" port = "Tlm" type = "Tlm" num = "0"/>
         <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
    </connection>
    <connection name = "healthTlm">
        <source component = "health" port = "Tlm" type = "Tlm" num = "0"/>
        <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
    </connection>
    <connection name = "blockDrvTlm">
         <source component = "blockDrv" port = "Tlm" type = "Tlm" num = "0"/>
         <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
    </connection>
    <connection name = "iotestTlm">
         <source component = "ioTest" port = "tlmOut" type = "Tlm" num = "0"/>
         <target component = "chanTlm" port = "TlmRecv" type = "Tlm" num = "0"/>
    </connection>
   
    <!-- Parameter Connections -->

    <!-- Time Connections -->


    <connection name = "eventLoggerTime">
        <source component = "eventLogger" port = "Time" type = "Time" num = "0"/>
        <target component = "RTOSTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "rg1Time">
         <source component = "rateGroup1Comp" port = "Time" type = "Time" num = "0"/>
         <target component = "RTOSTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "rg2Time">
         <source component = "rateGroup2Comp" port = "Time" type = "Time" num = "0"/>
         <target component = "RTOSTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "rg3Time">
         <source component = "rateGroup3Comp" port = "Time" type = "Time" num = "0"/>
         <target component = "RTOSTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "healthTime">
        <source component = "health" port = "Time" type = "Time" num = "0"/>
        <target component = "RTOSTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "cmdDispTime">
        <source component = "cmdDisp" port = "Time" type = "Time" num = "0"/>
        <target component = "RTOSTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "fatalAdapterTime">
        <source component = "fatalAdapter" port = "Time" type = "Time" num = "0"/>
        <target component = "RTOSTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>
    <connection name = "blockDrvTime">
         <source component = "blockDrv" port = "Time" type = "Time" num = "0"/>
         <target component = "RTOSTime" port = "timeGetPort" type = "Time" num = "0"/>
    </connection>


    <!-- Rate Group Connections -->
   
    <!-- Linux Timer Connection -->
    <connection name = "BlkDrvClock">
         <source component = "blockDrv" port = "CycleOut" type = "Cycle" num = "0"/>
         <target component = "rateGroupDriverComp" port = "CycleIn" type = "Cycle" num = "0"/>
    </connection>

    <!-- Rate Group 1 -->
    <connection name = "rateGroup1DriverComp">
        <source component = "rateGroupDriverComp" port = "CycleOut" type = "Cycle" num = "0"/>
        <target component = "rateGroup1Comp" port = "CycleIn" type = "Cycle" num = "0"/>
    </connection>
    <connection name = "Rg1ChTlm">
         <source component = "rateGroup1Comp" port = "RateGroupMemberOut" type = "Sched" num = "0"/>
         <target component = "chanTlm" port = "Run" type = "Sched" num = "0"/>
    </connection>
    <connection name = "Rg1Blinker">
         <source component = "rateGroup1Comp" port = "RateGroupMemberOut" type = "Sched" num = "0"/>
         <target component = "blinker" port = "schedIn" type = "Sched" num = "1"/>
    </connection>

    <!-- Rate Group 2 -->
    <connection name = "Rg2Drv">
        <source component = "rateGroupDriverComp" port = "CycleOut" type = "Cycle" num = "1"/>
        <target component = "rateGroup2Comp" port = "CycleIn" type = "Cycle" num = "0"/>
    </connection>      
    <connection name = "groundInterfaceRg">
       <source component = "rateGroup2Comp" port = "RateGroupMemberOut" type = "Sched" num = "0"/>
       <target component = "groundInterface" port = "schedIn" type = "Sched" num = "0"/>
   </connection>
   <connection name = "ledBlinkerRg">
       <source component = "rateGroup2Comp" port = "RateGroupMemberOut" type = "Sched" num = "1"/>
       <target component = "blinker" port = "schedIn" type = "Sched" num = "0"/>
   </connection>
   
    <!-- Rate Group 3 -->
    <connection name = "rateGroup3DriverComp">
        <source component = "rateGroupDriverComp" port = "CycleOut" type = "Cycle" num = "2"/>
        <target component = "rateGroup3Comp" port = "CycleIn" type = "Cycle" num = "0"/>
    </connection>
    
    <connection name = "Rg3Health">
         <source component = "rateGroup3Comp" port = "RateGroupMemberOut" type = "Sched" num = "0"/>
         <target component = "health" port = "Run" type = "Sched" num = "0"/>
    </connection>
    <connection name = "Rg3BlkDrv">
         <source component = "rateGroup3Comp" port = "RateGroupMemberOut" type = "Sched" num = "1"/>
         <target component = "blockDrv" port = "Sched" type = "Sched" num = "0"/>
    </connection>
    <!-- Note: This is optional if BufferManager stats are desired -->

    
    
    <!-- Health Connections -->
   
    <!-- The PingSend output port number should match the PingReturn input port number -->
    <!-- Each port number pair must be unique -->
    <!-- This order must match the pingEntries[] table in Ref/Top/Topology.cpp -->

    <connection name = "Rg1PingSend">
         <source component = "rateGroup1Comp" port = "PingOut" type = "Ping" num = "0"/>
         <target component = "health" port = "PingReturn" type = "Ping" num = "0"/>
    </connection>
    <connection name = "Rg1PingRecv">
         <source component = "health" port = "PingSend" type = "Ping" num = "0"/>
         <target component = "rateGroup1Comp" port = "PingIn" type = "Ping" num = "0"/>
    </connection>
    <connection name = "Rg2PingSend">
         <source component = "health" port = "PingSend" type = "Ping" num = "1"/>
         <target component = "rateGroup2Comp" port = "PingIn" type = "Ping" num = "0"/>
    </connection>
    <connection name = "Rg2PingRecv">
         <source component = "rateGroup2Comp" port = "PingOut" type = "Ping" num = "0"/>
         <target component = "health" port = "PingReturn" type = "Ping" num = "1"/>
    </connection>
    <connection name = "Rg3PingSend">
         <source component = "health" port = "PingSend" type = "Ping" num = "2"/>
         <target component = "rateGroup3Comp" port = "PingIn" type = "Ping" num = "0"/>
    </connection>
    <connection name = "Rg3PingRecv">
         <source component = "rateGroup3Comp" port = "PingOut" type = "Ping" num = "0"/>
         <target component = "health" port = "PingReturn" type = "Ping" num = "2"/>
    </connection>
    <connection name = "cmdDispPingIn">
        <source component = "health" port = "PingSend" type = "Ping" num = "3"/>
        <target component = "cmdDisp" port = "pingIn" type = "Ping" num = "0"/>
    </connection>
    <connection name = "cmdDispPingRecv">
        <source component = "cmdDisp" port = "pingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "3"/>
    </connection>
    <connection name = "eventLoggerPingSend">
        <source component = "health" port = "PingSend" type = "Ping" num = "4"/>
        <target component = "eventLogger" port = "pingIn" type = "Ping" num = "0"/>
    </connection>
    <connection name = "eventLoggerPingRecv">
        <source component = "eventLogger" port = "pingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "4"/>
    </connection>
    <connection name = "chanTlmPingSend">
        <source component = "health" port = "PingSend" type = "Ping" num = "5"/>
        <target component = "chanTlm" port = "pingIn" type = "Ping" num = "0"/>
    </connection>
    <connection name = "chanTlmPingRecv">
        <source component = "chanTlm" port = "pingOut" type = "Ping" num = "0"/>
        <target component = "health" port = "PingReturn" type = "Ping" num = "5"/>
    </connection>
    <connection name = "blockDrvPingSend">
         <source component = "health" port = "PingSend" type = "Ping" num = "6"/>
         <target component = "blockDrv" port = "PingIn" type = "Ping" num = "0"/>
    </connection>
    <connection name = "blockDrvPingRecv">
         <source component = "blockDrv" port = "PingOut" type = "Ping" num = "0"/>
         <target component = "health" port = "PingReturn" type = "Ping" num = "6"/>
    </connection>

    <!-- Socket Ground System Connections -->

    <!-- Uplink Connections -->
   
    <!-- Uplink connection to command dispatcher should not conflict with command sequencer -->

    <!-- Fault Connections -->
    <connection name = "eventLoggerFatalOut">
        <source component = "eventLogger" port = "FatalAnnounce" type = "FatalEvent" num = "0"/>
        <target component = "fatalHandler" port = "FatalReceive" type = "FatalEvent" num = "0"/>
    </connection>
    
    <!-- Reference App Connections -->
    <connection name = "blinkergpio">
        <source component = "blinker" port = "gpioWrite" type = "GpioWrite" num = "0"/>
        <target component = "ledDrv" port = "gpioWrite" type = "GpioWrite" num = "0"/>
    </connection>


    
</assembly>
